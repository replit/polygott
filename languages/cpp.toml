name = "cpp"
entrypoint = "main.cpp"
extensions = [
  "cpp"
]
packages = []
setup = [
  "cd /tmp && wget --quiet http://releases.llvm.org/6.0.0/clang+llvm-6.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz && tar xf clang+llvm-6.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz && cp clang+llvm-6.0.0-x86_64-linux-gnu-ubuntu-16.04/bin/clang-format /bin/ && rm -rf clang+llvm-6.0.0-x86_64-linux-gnu-ubuntu-16.04 && rm -rf clang+llvm-6.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz",
  "cd /tmp && wget -q https://github.com/cquery-project/cquery/releases/download/v20180302/cquery-v20180302-x86_64-unknown-linux-gnu.tar.xz && tar xf cquery-v20180302-x86_64-unknown-linux-gnu.tar.xz && cd cquery-v20180302-x86_64-unknown-linux-gnu && cp bin/cquery /bin && cp -r lib/* /lib/ && cd /tmp && rm cquery-v20180302-x86_64-unknown-linux-gnu.tar.xz && rm -r cquery-v20180302-x86_64-unknown-linux-gnu"
]

[compile]
command = [
  "g++",
  "-pthread",
  "-o",
  "main"
]

[run]
pty = true
command = [
  "./main"
]

[tests]

  [tests.0]
  code = "#include <iostream>\n  #include <string>\n\n  int main() {\n  std::string line;\n  std::getline(std::cin, line);\n  std::cout << line;\n  }"
  input = "hi\n"
  output = "hi"

  [tests.hello]
  code = "#include <iostream>\nint main() { std::cout << \"hello\" << std::endl; }"
  output = "hello\n"

[languageServer]
command = [
  "cquery",
  "--init={\"progressReportFrequencyMs\": -1,\"cacheDirectory\":\"/tmp/cquery\"}"
]