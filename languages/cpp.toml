name = "cpp"
aliases = [
  "c++"
]
entrypoint = "main.cpp"
extensions = [
  "cpp"
]
packages = [
  "clang-7",
  "clang-format-7"
]
setup = [
  "cd /tmp && wget -q https://github.com/cquery-project/cquery/releases/download/v20180302/cquery-v20180302-x86_64-unknown-linux-gnu.tar.xz && tar xf cquery-v20180302-x86_64-unknown-linux-gnu.tar.xz && cd cquery-v20180302-x86_64-unknown-linux-gnu && cp bin/cquery /bin && cp -r lib/* /lib/ && cd /tmp && rm cquery-v20180302-x86_64-unknown-linux-gnu.tar.xz && rm -r cquery-v20180302-x86_64-unknown-linux-gnu",
  "update-alternatives --install /usr/bin/clang-format clang-format `which clang-format-7` 100",
  "mkdir -p /config/cquery && echo -e '%clang\\n%c -std=c11\\n%cpp -std=c++17\\n-pthread' | tee /config/cquery/.cquery",
]

[compile]
command = [
  "clang++-7",
  "-pthread",
  "-o",
  "main"
]

[run]
command = [
  "./main"
]

[tests]

  [tests.0]
  code = "#include <iostream>\n  #include <string>\n\n  int main() {\n  std::string line;\n  std::getline(std::cin, line);\n  std::cout << line;\n  }"
  input = "hi\n"
  output = "hi"

  [tests.hello]
  code = "#include <iostream>\nint main() { std::cout << \"hello\" << std::endl; }"
  output = "hello\n"

[languageServer]
command = [
  "cquery",
  "--init={\"progressReportFrequencyMs\": -1,\"cacheDirectory\":\"/tmp/cquery\"}"
]
