name = "eiffel"
entrypoint = "application.e"
extensions = [
  "e"
 ]
 
  
setup = [
	'''
	apt-get update && apt-get install -y --no-install-recommends \
        ca-certificates curl \
        bzip2 \
        gcc make \
        libxtst-dev \
        libgtk2.0-dev \
        libssl-dev \
	&& apt-get clean \
 	&& rm -rf /var/lib/apt/lists/*
	cd /usr/local && curl -sSL https://www.eiffel.org/setup/install.sh | bash -s -- --channel latest --install-dir /usr/local/eiffel
  	'''	
]


runtimeSetup = [
     '''echo '<?xml version="1.0" encoding="ISO-8859-1"?><system xmlns="http://www.eiffel.com/developers/xml/configuration-1-20-0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.eiffel.com/developers/xml/configuration-1-20-0 http://www.eiffel.com/developers/xml/configuration-1-20-0.xsd" name="application" uuid="E0DFF854-7FF3-4772-A920-DAA1F8A2CBB9"><target name="application"><root class="APPLICATION" feature="make"/><setting name="console_application" value="true"/><library name="base" location="$ISE_LIBRARY\library\base\base.ecf"/><cluster name="application" location=".\"/></target></system>' > /home/runner/application.ecf '''
  
]

versionCommand = [
    "ISE_EIFFEL=/usr/local/eiffel", 
    "ISE_PLATFORM=linux-x86-64",
    "ISE_LIBRARY=$ISE_EIFFEL",
    "PATH=$PATH:$ISE_EIFFEL/studio/spec/$ISE_PLATFORM/bin:$ISE_EIFFEL/tools/spec/$ISE_PLATFORM/bin:$ISE_EIFFEL/library/gobo/spec/$ISE_PLATFORM/bin:$ISE_EIFFEL/esbuilder/spec/$ISE_PLATFORM/bin",
    "ecb", 
    "-version"
]

[compile]
command = [
    "ISE_EIFFEL=/usr/local/eiffel", 
    "ISE_PLATFORM=linux-x86-64",
    "ISE_LIBRARY=$ISE_EIFFEL",
    "PATH=$PATH:$ISE_EIFFEL/studio/spec/$ISE_PLATFORM/bin:$ISE_EIFFEL/tools/spec/$ISE_PLATFORM/bin:$ISE_EIFFEL/library/gobo/spec/$ISE_PLATFORM/bin:$ISE_EIFFEL/esbuilder/spec/$ISE_PLATFORM/bin",
    "ecb",
    "application.e",
    "-clean",
    "-finalize"
]

[run]
command = [
  "./EIFGENs/application/F_code/application"
]

[tests]

  [tests.hello]
  code = """
    class APPLICATION

    create
      make

    feature {NONE} -- Initialization

      make
        do
          print ("Hello World")
        end
    end    
  """
  output = "Hello World"

