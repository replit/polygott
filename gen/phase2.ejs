#!/bin/bash
set -ev
shopt -s dotglob

export HOME=/home/runner
mkdir -p /opt/homes/default /opt/virtualenvs
rsync --archive --no-specials --no-devices /home/runner/ /opt/homes/default
find /home/runner/ -mindepth 1 -maxdepth 1 -exec rm -rf {} \;
expected_mtime="$(find /var/lib/apt/lists -type f -print0 | xargs -0 stat --format="%Y" | sort -n | tail -n1)"

<% for (const lang of languages) { -%>
<%   if (!lang.setup || !lang.setup.length) continue; -%>
if [[ -z "${LANGS}" || <%- [...new Set([lang.id, ...(lang.childLanguages || [])])].sort().map(id => `",\${LANGS}," == *",${id},"*`).join(' || ') %> ]]; then
<%   if (lang.languages && lang.languages.length) { -%>
	echo 'Setup parents of <%= lang.name %>'
<%     for (const parentLanguage of (lang.languages || [])) { -%>
	find /opt/homes/<%= parentLanguage %>/ -mindepth 1 -maxdepth 1 -exec cp -rp {} /home/runner/ \;
<%     } -%>
<%   } -%>
<%   if (lang.setup && lang.setup.length) { -%>
	echo 'Setup <%= lang.name %>'
	cd "${HOME}"

<%     for ( let line of lang.setup ) { -%>
	<%- line %>
<%     } -%>

<%   } -%>
	if [[ -n "$(ls -A /home/runner)" ]]; then
		echo Storing home for <%= lang.name %>
		mkdir -p /opt/homes/<%= lang.name %>
		cp -rp /opt/homes/default/* /opt/homes/<%= lang.name %>
		rsync --archive --no-specials --no-devices /home/runner/ /opt/homes/<%= lang.name %>
		find /home/runner/ -mindepth 1 -maxdepth 1 -exec rm -rf {} \;
		ls -A /opt/homes/<%= lang.name %>
	fi
	last_mtime="$(find /var/lib/apt/lists -type f -print0 | xargs -0 stat --format="%Y" | sort -n | tail -n1)"
	if [[ "${last_mtime}" != "${expected_mtime}" ]]; then
		echo 'Language <%= lang.name %> just touched the apt lists!'
		exit 1
	fi
fi

<% } -%>

chown runner:runner -R /home/runner /opt/homes /config /opt/virtualenvs
cp -rp /opt/homes/default/* /home/runner
if [[ -n "$(ls /tmp/)" ]]; then
	rm -rf /tmp/*
fi

rm -rf /var/lib/apt/lists/*
rm /phase2.sh
